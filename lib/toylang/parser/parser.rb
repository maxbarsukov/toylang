#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.6.0
# from Racc grammar file "".
#

require 'racc/parser.rb'

require_relative '../lexer/lexer'
require_relative '../ast/nodes'

class Parser < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 151)
def parse(code, show_tokens=false)
  @tokens = Lexer.new.tokenize(code)
  puts @tokens.inspect if show_tokens
  do_parse
end

def next_token
  @tokens.shift
end
...end grammar.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    29,    76,    27,    26,    28,    16,    18,    19,    20,    21,
    22,    23,    25,    16,    30,    47,    24,    46,    29,    75,
    27,    26,    28,    16,    18,    19,    20,    21,    22,    23,
    25,    15,    49,    17,    24,    82,    29,    81,    27,    26,
    28,    17,    18,    19,    20,    21,    22,    23,    25,    15,
    50,    17,    24,    29,    52,    27,    26,    28,    54,    18,
    19,    20,    21,    22,    23,    25,    90,    15,    89,    24,
    29,    56,    27,    26,    28,    32,    18,    19,    20,    21,
    22,    23,    25,    82,    15,    93,    24,    29,    76,    27,
    26,    28,    80,    18,    19,    20,    21,    22,    23,    25,
    32,    15,    32,    24,    29,    84,    27,    26,    28,    86,
    18,    19,    20,    21,    22,    23,    25,    76,    15,    76,
    24,    29,    95,    27,    26,    28,   nil,    18,    19,    20,
    21,    22,    23,    25,   nil,    15,   nil,    24,    29,   nil,
    27,    26,    28,   nil,    18,    19,    20,    21,    22,    23,
    25,   nil,    15,   nil,    24,    29,   nil,    27,    26,    28,
   nil,    18,    19,    20,    21,    22,    23,    25,   nil,    15,
   nil,    24,    29,   nil,    27,    26,    28,   nil,    18,    19,
    20,    21,    22,    23,    25,   nil,    15,   nil,    24,    29,
   nil,    27,    26,    28,   nil,    18,    19,    20,    21,    22,
    23,    25,   nil,    15,   nil,    24,    29,   nil,    27,    26,
    28,   nil,    18,    19,    20,    21,    22,    23,    25,   nil,
    15,   nil,    24,    29,   nil,    27,    26,    28,   nil,    18,
    19,    20,    21,    22,    23,    25,   nil,    15,   nil,    24,
    29,   nil,    27,    26,    28,   nil,    18,    19,    20,    21,
    22,    23,    25,   nil,    15,   nil,    24,    29,   nil,    27,
    26,    28,   nil,    18,    19,    20,    21,    22,    23,    25,
   nil,    15,   nil,    24,    29,   nil,    27,    26,    28,   nil,
    18,    19,    20,    21,    22,    23,    25,   nil,    15,   nil,
    24,    29,   nil,    27,    26,    28,   nil,    18,    19,    20,
    21,    22,    23,    25,   nil,    15,   nil,    24,    29,   nil,
    27,    26,    28,   nil,    18,    19,    20,    21,    22,    23,
    25,   nil,    15,   nil,    24,    29,   nil,    27,    26,    28,
   nil,    18,    19,    20,    21,    22,    23,    25,   nil,    15,
   nil,    24,    29,   nil,    27,    26,    28,   nil,    18,    19,
    20,    21,    22,    23,    25,   nil,    15,   nil,    24,    29,
   nil,    27,    26,    28,   nil,    18,    19,    20,    21,    22,
    23,    25,   nil,    15,   nil,    24,    29,   nil,    27,    26,
    28,   nil,    18,    19,    20,    21,    22,    23,    25,    16,
    15,   nil,    24,    29,   nil,    27,    26,    28,    91,    18,
    19,    20,    21,    22,    23,    25,   nil,    15,    32,    24,
    43,    44,    41,    42,   nil,   nil,    32,    17,    43,    44,
    41,    42,   nil,    32,    15,    43,    44,    41,    42,    37,
    38,    39,    40,    35,    36,    34,    33,    76,   nil,    32,
    69,    43,    44,    41,    42,    37,    38,    39,    40,    35,
    36,    34,    33,    76,   nil,    32,   nil,    43,    44,    41,
    42,    37,    38,    39,    40,    35,    36,    34,    33,    32,
   nil,    43,    44,    41,    42,    37,    38,    39,    40,    35,
    36,    34,    33,    32,   nil,    43,    44,    41,    42,    37,
    38,    39,    40,    35,    36,    34,    33,    32,   nil,    43,
    44,    41,    42,    37,    38,    39,    40,    35,    36,    34,
    33,    32,   nil,    43,    44,    41,    42,    37,    38,    39,
    40,    35,    36,    34,    33,    32,   nil,    43,    44,    41,
    42,    37,    38,    39,    40,    35,    36,    34,    33,    32,
   nil,    43,    44,    41,    42,    37,    38,    39,    40,    35,
    36,    34,    33,    32,   nil,    43,    44,    41,    42,    37,
    38,    39,    40,    35,    36,    34,    32,   nil,    43,    44,
    41,    42,    37,    38,    39,    40,    35,    36,    32,   nil,
    43,    44,    41,    42,    37,    38,    39,    40,    32,   nil,
    43,    44,    41,    42,    37,    38,    39,    40,    32,   nil,
    43,    44,    41,    42,    32,   nil,    43,    44,    41,    42,
    32,   nil,    43,    44,    32,   nil,    43,    44 ]

racc_action_check = [
     0,    50,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     2,     1,    23,     0,    23,    76,    50,
    76,    76,    76,    76,    76,    76,    76,    76,    76,    76,
    76,     0,    25,     0,    76,    70,    15,    70,    15,    15,
    15,     2,    15,    15,    15,    15,    15,    15,    15,    76,
    26,    76,    15,    24,    28,    24,    24,    24,    30,    24,
    24,    24,    24,    24,    24,    24,    83,    15,    83,    24,
    27,    32,    27,    27,    27,    48,    27,    27,    27,    27,
    27,    27,    27,    87,    24,    87,    27,    29,    52,    29,
    29,    29,    56,    29,    29,    29,    29,    29,    29,    29,
    67,    27,    68,    29,    31,    75,    31,    31,    31,    79,
    31,    31,    31,    31,    31,    31,    31,    86,    29,    89,
    31,    33,    90,    33,    33,    33,   nil,    33,    33,    33,
    33,    33,    33,    33,   nil,    31,   nil,    33,    34,   nil,
    34,    34,    34,   nil,    34,    34,    34,    34,    34,    34,
    34,   nil,    33,   nil,    34,    35,   nil,    35,    35,    35,
   nil,    35,    35,    35,    35,    35,    35,    35,   nil,    34,
   nil,    35,    36,   nil,    36,    36,    36,   nil,    36,    36,
    36,    36,    36,    36,    36,   nil,    35,   nil,    36,    37,
   nil,    37,    37,    37,   nil,    37,    37,    37,    37,    37,
    37,    37,   nil,    36,   nil,    37,    38,   nil,    38,    38,
    38,   nil,    38,    38,    38,    38,    38,    38,    38,   nil,
    37,   nil,    38,    39,   nil,    39,    39,    39,   nil,    39,
    39,    39,    39,    39,    39,    39,   nil,    38,   nil,    39,
    40,   nil,    40,    40,    40,   nil,    40,    40,    40,    40,
    40,    40,    40,   nil,    39,   nil,    40,    41,   nil,    41,
    41,    41,   nil,    41,    41,    41,    41,    41,    41,    41,
   nil,    40,   nil,    41,    42,   nil,    42,    42,    42,   nil,
    42,    42,    42,    42,    42,    42,    42,   nil,    41,   nil,
    42,    43,   nil,    43,    43,    43,   nil,    43,    43,    43,
    43,    43,    43,    43,   nil,    42,   nil,    43,    44,   nil,
    44,    44,    44,   nil,    44,    44,    44,    44,    44,    44,
    44,   nil,    43,   nil,    44,    46,   nil,    46,    46,    46,
   nil,    46,    46,    46,    46,    46,    46,    46,   nil,    44,
   nil,    46,    47,   nil,    47,    47,    47,   nil,    47,    47,
    47,    47,    47,    47,    47,   nil,    46,   nil,    47,    49,
   nil,    49,    49,    49,   nil,    49,    49,    49,    49,    49,
    49,    49,   nil,    47,   nil,    49,    80,   nil,    80,    80,
    80,   nil,    80,    80,    80,    80,    80,    80,    80,    85,
    49,   nil,    80,    82,   nil,    82,    82,    82,    85,    82,
    82,    82,    82,    82,    82,    82,   nil,    80,    61,    82,
    61,    61,    61,    61,   nil,   nil,    62,    85,    62,    62,
    62,    62,   nil,    45,    82,    45,    45,    45,    45,    45,
    45,    45,    45,    45,    45,    45,    45,    51,   nil,    51,
    45,    51,    51,    51,    51,    51,    51,    51,    51,    51,
    51,    51,    51,    53,   nil,    53,   nil,    53,    53,    53,
    53,    53,    53,    53,    53,    53,    53,    53,    53,     3,
   nil,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,     3,    55,   nil,    55,    55,    55,    55,    55,
    55,    55,    55,    55,    55,    55,    55,    71,   nil,    71,
    71,    71,    71,    71,    71,    71,    71,    71,    71,    71,
    71,    72,   nil,    72,    72,    72,    72,    72,    72,    72,
    72,    72,    72,    72,    72,    73,   nil,    73,    73,    73,
    73,    73,    73,    73,    73,    73,    73,    73,    73,    88,
   nil,    88,    88,    88,    88,    88,    88,    88,    88,    88,
    88,    88,    88,    57,   nil,    57,    57,    57,    57,    57,
    57,    57,    57,    57,    57,    57,    58,   nil,    58,    58,
    58,    58,    58,    58,    58,    58,    58,    58,    59,   nil,
    59,    59,    59,    59,    59,    59,    59,    59,    60,   nil,
    60,    60,    60,    60,    60,    60,    60,    60,    63,   nil,
    63,    63,    63,    63,    64,   nil,    64,    64,    64,    64,
    65,   nil,    65,    65,    66,   nil,    66,    66 ]

racc_action_pointer = [
    -2,    14,     6,   452,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    34,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   -16,    51,     1,    37,    68,    40,    85,
    58,   102,    58,   119,   136,   153,   170,   187,   204,   221,
   238,   255,   272,   289,   306,   406,   323,   340,    58,   357,
   -14,   422,    73,   438,   nil,   466,    59,   536,   549,   561,
   571,   391,   399,   581,   587,   593,   597,    83,    85,   nil,
     3,   480,   494,   508,   nil,    92,    16,   nil,   nil,   106,
   374,   nil,   391,    34,   nil,   382,   102,    51,   522,   104,
   109,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
    -1,   -58,    -2,    -3,    -6,    -7,    -8,    -9,   -10,   -11,
   -12,   -13,   -14,   -15,   -16,   -58,   -18,   -19,   -20,   -21,
   -22,   -23,   -24,   -25,   -58,   -45,   -58,   -58,   -58,   -58,
   -58,    -5,   -58,   -58,   -58,   -58,   -58,   -58,   -58,   -58,
   -58,   -58,   -58,   -58,   -58,   -58,   -29,   -58,   -44,   -58,
   -58,   -58,   -58,   -58,    96,    -4,   -27,   -32,   -33,   -34,
   -35,   -36,   -37,   -38,   -39,   -40,   -41,   -42,   -43,   -17,
   -58,   -30,   -46,   -47,   -48,   -50,   -58,   -53,   -54,   -55,
   -29,   -26,   -58,   -58,   -51,   -58,   -58,   -58,   -31,   -58,
   -58,   -57,   -56,   -28,   -49,   -52 ]

racc_goto_table = [
    31,     2,    45,    74,    77,    78,    79,    70,     1,    83,
   nil,    48,   nil,   nil,    51,   nil,    53,   nil,    55,   nil,
    57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
    67,    68,   nil,    71,    72,   nil,    73,   nil,   nil,    92,
   nil,    87,    94,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    71,   nil,    88,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    85,   nil,   nil,
   nil,   nil,   nil,    31 ]

racc_goto_check = [
     4,     2,     3,    16,    16,    16,    16,    15,     1,    17,
   nil,     3,   nil,   nil,     3,   nil,     3,   nil,     3,   nil,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,   nil,     3,     3,   nil,     3,   nil,   nil,    16,
   nil,    15,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,     3,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,
   nil,   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,     8,     1,   -13,    -2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   -39,   -47,   -66 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,     9,
    10,    11,    12,    13,    14,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 37, :_reduce_1,
  1, 37, :_reduce_2,
  1, 38, :_reduce_3,
  3, 38, :_reduce_4,
  2, 38, :_reduce_5,
  1, 38, :_reduce_6,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  3, 39, :_reduce_17,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 41, :_reduce_20,
  1, 41, :_reduce_21,
  1, 41, :_reduce_22,
  1, 41, :_reduce_23,
  1, 41, :_reduce_24,
  1, 42, :_reduce_25,
  4, 42, :_reduce_26,
  3, 42, :_reduce_27,
  6, 42, :_reduce_28,
  0, 51, :_reduce_29,
  1, 51, :_reduce_30,
  3, 51, :_reduce_31,
  3, 43, :_reduce_32,
  3, 43, :_reduce_33,
  3, 43, :_reduce_34,
  3, 43, :_reduce_35,
  3, 43, :_reduce_36,
  3, 43, :_reduce_37,
  3, 43, :_reduce_38,
  3, 43, :_reduce_39,
  3, 43, :_reduce_40,
  3, 43, :_reduce_41,
  3, 43, :_reduce_42,
  3, 43, :_reduce_43,
  2, 43, :_reduce_44,
  1, 44, :_reduce_45,
  3, 45, :_reduce_46,
  3, 45, :_reduce_47,
  3, 46, :_reduce_48,
  6, 46, :_reduce_49,
  0, 53, :_reduce_50,
  1, 53, :_reduce_51,
  3, 53, :_reduce_52,
  3, 50, :_reduce_53,
  3, 47, :_reduce_54,
  3, 48, :_reduce_55,
  5, 49, :_reduce_56,
  3, 52, :_reduce_57 ]

racc_reduce_n = 58

racc_shift_n = 96

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :ELSE => 3,
  :WHILE => 4,
  :DEF => 5,
  :CLASS => 6,
  :NEWLINE => 7,
  :NUMBER => 8,
  :STRING => 9,
  :TRUE => 10,
  :FALSE => 11,
  :NIL => 12,
  :IDENTIFIER => 13,
  :CONSTANT => 14,
  :INDENT => 15,
  :DEDENT => 16,
  "." => 17,
  "!" => 18,
  "*" => 19,
  "/" => 20,
  "+" => 21,
  "-" => 22,
  ">" => 23,
  ">=" => 24,
  "<" => 25,
  "<=" => 26,
  "==" => 27,
  "!=" => 28,
  "&&" => 29,
  "||" => 30,
  "=" => 31,
  "," => 32,
  "(" => 33,
  ")" => 34,
  ";" => 35 }

racc_nt_base = 36

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "ELSE",
  "WHILE",
  "DEF",
  "CLASS",
  "NEWLINE",
  "NUMBER",
  "STRING",
  "TRUE",
  "FALSE",
  "NIL",
  "IDENTIFIER",
  "CONSTANT",
  "INDENT",
  "DEDENT",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"==\"",
  "\"!=\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\",\"",
  "\"(\"",
  "\")\"",
  "\";\"",
  "$start",
  "Root",
  "Expressions",
  "Expression",
  "Terminator",
  "Literal",
  "Call",
  "Operator",
  "Constant",
  "Assign",
  "Def",
  "Class",
  "If",
  "IfElse",
  "While",
  "ArgList",
  "Block",
  "ParamList" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 30)
  def _reduce_1(val, _values, result)
     result = Nodes.new([])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 31)
  def _reduce_2(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 35)
  def _reduce_3(val, _values, result)
     result = Nodes.new(val)
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 36)
  def _reduce_4(val, _values, result)
     result = val[0] << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 37)
  def _reduce_5(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 38)
  def _reduce_6(val, _values, result)
     result = Nodes.new([])
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

module_eval(<<'.,.,', 'grammar.y', 52)
  def _reduce_17(val, _values, result)
     result = val[1]
    result
  end
.,.,

# reduce 18 omitted

# reduce 19 omitted

module_eval(<<'.,.,', 'grammar.y', 61)
  def _reduce_20(val, _values, result)
     result = NumberNode.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 62)
  def _reduce_21(val, _values, result)
     result = StringNode.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 63)
  def _reduce_22(val, _values, result)
     result = TrueNode.new
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 64)
  def _reduce_23(val, _values, result)
     result = FalseNode.new
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 65)
  def _reduce_24(val, _values, result)
     result = NilNode.new
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 70)
  def _reduce_25(val, _values, result)
     result = CallNode.new(nil, val[0], [])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 72)
  def _reduce_26(val, _values, result)
     result = CallNode.new(nil, val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 74)
  def _reduce_27(val, _values, result)
     result = CallNode.new(val[0], val[2], [])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 77)
  def _reduce_28(val, _values, result)
     result = CallNode.new(val[0], val[2], val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 81)
  def _reduce_29(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 82)
  def _reduce_30(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 83)
  def _reduce_31(val, _values, result)
     result = val[0] << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 87)
  def _reduce_32(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 88)
  def _reduce_33(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 89)
  def _reduce_34(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 90)
  def _reduce_35(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 91)
  def _reduce_36(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 92)
  def _reduce_37(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 93)
  def _reduce_38(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 94)
  def _reduce_39(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 95)
  def _reduce_40(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 96)
  def _reduce_41(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 97)
  def _reduce_42(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 98)
  def _reduce_43(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 99)
  def _reduce_44(val, _values, result)
     result = CallNode.new(val[1], val[0], [])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 103)
  def _reduce_45(val, _values, result)
     result = GetConstantNode.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 107)
  def _reduce_46(val, _values, result)
     result = SetLocalNode.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 108)
  def _reduce_47(val, _values, result)
     result = SetConstantNode.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 112)
  def _reduce_48(val, _values, result)
     result = DefNode.new(val[1], [], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 114)
  def _reduce_49(val, _values, result)
     result = DefNode.new(val[1], val[3], val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 118)
  def _reduce_50(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 119)
  def _reduce_51(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 120)
  def _reduce_52(val, _values, result)
     result = val[0] << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 124)
  def _reduce_53(val, _values, result)
     result = WhileNode.new(val[1], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 128)
  def _reduce_54(val, _values, result)
     result = ClassNode.new(val[1], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 132)
  def _reduce_55(val, _values, result)
     result = IfNode.new(val[1], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 137)
  def _reduce_56(val, _values, result)
     result = IfElseNode.new(val[1], val[2], val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 140)
  def _reduce_57(val, _values, result)
     result = val[1]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
